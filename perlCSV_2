#!/usr/bin/perl
# perlCSV.plx
# 
#AUTHOR: Thomas E. Falk
#
# usage: perl perlCSV.plx
# 
# 01/18/19: cleaned up print debug and comments, finished parsing date, gluc, bp and weight
# 01/12/19: added @fields with coderunner
# 05/24/18: moving to perl after intial attempts with sed and awk
#
# edited_selected.csv is copy_selected.csv with the first two lines deleted
#

# use strict;
# use warnings;

	my $filename = "edited_selected.csv";

	open(INPUT, $filename) or die "Cannot open $filename";

	# print headers
	print "day,glucose,bPressure,weight\n";

	# Read the header line.
	# my $line = <INPUT>;

	# Read the lines one by one.
	while($line =<INPUT>)
	{
		# get rid of the pesky newline character
  		# chomp;

  		# read the fields in the current record into an array
		my @fields = split /[:,\s]+/, $line;

  		# debug the fields by printing the next one alone, before adding to line
		# this can be used later to determine when done with line
		# print scalar (@fields), " = number of records in row\n";
	
		if ($fields[0] eq "Sun" ||
			$fields[0] eq "Mon" ||
			$fields[0] eq "Tue" ||
			$fields[0] eq "Wed" ||
			$fields[0] eq "Thu" ||
			$fields[0] eq "Fri" ||
			$fields[0] eq "Sat" ||
			$fields[0] eq "Sun")  {
				if ($fields[1] ne $day) {
					print "$day",",","$glucose",",","$bPressure",",","$weight\n";
				}
			$day = $fields[1]
			# print $fields[1], " = contents of fields[1]\n";
		}
		# print $fields[4];
		if ($fields[5] eq "Glucose") {
			$glucose = $fields[6];
		}
		if ($fields[4] eq "systolic/diastolic") {
			$bPressure = $fields[5];
		}
		if ($fields[16] eq "Weight") {
			$weight = $fields[17];
		}
	}
	close(INPUT);
